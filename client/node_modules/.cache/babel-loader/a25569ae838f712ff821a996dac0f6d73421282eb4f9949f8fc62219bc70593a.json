{"ast":null,"code":"var _jsxFileName = \"D:\\\\Appointment Scheduler\\\\client\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation();\n\n  // If auth is still loading, show nothing\n  if (loading) {\n    return null;\n  }\n\n  // If user is not authenticated, redirect to login\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If a specific role is required and user doesn't have it, redirect to dashboard\n  if (requiredRole && user.role !== requiredRole && user.role !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated and has proper role, render the children\n  return children;\n};\n_s(PrivateRoute, \"zPafkKLdz6KrRvMe2id3iDpNU34=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","requiredRole","_s","user","loading","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["D:/Appointment Scheduler/client/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ children, requiredRole }) => {\r\n  const { user, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  // If auth is still loading, show nothing\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  // If user is not authenticated, redirect to login\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // If a specific role is required and user doesn't have it, redirect to dashboard\r\n  if (requiredRole && user.role !== requiredRole && user.role !== 'admin') {\r\n    return <Navigate to=\"/dashboard\" replace />;\r\n  }\r\n\r\n  // If authenticated and has proper role, render the children\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;EACnC,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIS,OAAO,EAAE;IACX,OAAO,IAAI;EACb;;EAEA;EACA,IAAI,CAACD,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACJ,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS,CAAE;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIZ,YAAY,IAAIE,IAAI,CAACW,IAAI,KAAKb,YAAY,IAAIE,IAAI,CAACW,IAAI,KAAK,OAAO,EAAE;IACvE,oBAAOhB,OAAA,CAACJ,QAAQ;MAACY,EAAE,EAAC,YAAY;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;;EAEA;EACA,OAAOb,QAAQ;AACjB,CAAC;AAACE,EAAA,CArBIH,YAAY;EAAA,QACUH,OAAO,EAChBD,WAAW;AAAA;AAAAoB,EAAA,GAFxBhB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}