{"ast":null,"code":"var _jsxFileName = \"D:\\\\Appointment Scheduler\\\\client\\\\src\\\\components\\\\layout\\\\AppNotification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { Alert, AlertTitle, Box, Button, IconButton, Snackbar, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EventIcon from '@mui/icons-material/Event';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppNotification = ({\n  appointments\n}) => {\n  _s();\n  var _upcomingAppointment$, _upcomingAppointment$2, _upcomingAppointment$3;\n  const {\n    user\n  } = useAuth();\n  const [open, setOpen] = useState(false);\n  const [upcomingAppointment, setUpcomingAppointment] = useState(null);\n  useEffect(() => {\n    if (!appointments || !Array.isArray(appointments) || appointments.length === 0) {\n      return;\n    }\n\n    // Filter scheduled appointments and sort by date/time\n    const scheduledAppointments = appointments.filter(apt => apt.status === 'scheduled').sort((a, b) => new Date(a.date) - new Date(b.date));\n    if (scheduledAppointments.length === 0) {\n      return;\n    }\n\n    // Find the next appointment (closest to current time)\n    const now = new Date();\n    const upcoming = scheduledAppointments.find(apt => {\n      const aptDate = new Date(apt.date);\n      const [hours, minutes] = apt.startTime.split(':').map(Number);\n      aptDate.setHours(hours, minutes);\n      return aptDate > now;\n    });\n    if (upcoming) {\n      setUpcomingAppointment(upcoming);\n      setOpen(true);\n    }\n  }, [appointments]);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  if (!upcomingAppointment) {\n    return null;\n  }\n  const isBusinessUser = user && (user.role === 'business' || user.role === 'admin');\n  const appointmentDate = new Date(upcomingAppointment.date);\n  const [hours, minutes] = upcomingAppointment.startTime.split(':').map(Number);\n  appointmentDate.setHours(hours, minutes);\n\n  // Calculate how much time until the appointment\n  const now = new Date();\n  const timeDiff = appointmentDate - now;\n  const hoursUntil = Math.floor(timeDiff / (1000 * 60 * 60));\n  const minutesUntil = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n  let timeUntilText = '';\n  if (hoursUntil > 0) {\n    timeUntilText = `${hoursUntil} hour${hoursUntil > 1 ? 's' : ''}`;\n    if (minutesUntil > 0) {\n      timeUntilText += ` and ${minutesUntil} minute${minutesUntil > 1 ? 's' : ''}`;\n    }\n  } else if (minutesUntil > 0) {\n    timeUntilText = `${minutesUntil} minute${minutesUntil > 1 ? 's' : ''}`;\n  } else {\n    timeUntilText = 'less than a minute';\n  }\n\n  // Different content based on user role\n  const notificationTitle = isBusinessUser ? \"Upcoming Appointment with Client\" : `Upcoming Appointment: ${(_upcomingAppointment$ = upcomingAppointment.service) === null || _upcomingAppointment$ === void 0 ? void 0 : _upcomingAppointment$.name}`;\n  const notificationContent = isBusinessUser ? `You have an appointment with ${(_upcomingAppointment$2 = upcomingAppointment.user) === null || _upcomingAppointment$2 === void 0 ? void 0 : _upcomingAppointment$2.name} in ${timeUntilText} at ${upcomingAppointment.startTime}.` : `Your appointment with ${(_upcomingAppointment$3 = upcomingAppointment.business) === null || _upcomingAppointment$3 === void 0 ? void 0 : _upcomingAppointment$3.name} is in ${timeUntilText} at ${upcomingAppointment.startTime}.`;\n  const linkPath = isBusinessUser ? \"/business/dashboard\" : `/appointments/${upcomingAppointment._id}`;\n  const linkText = isBusinessUser ? \"View Business Dashboard\" : \"View Appointment Details\";\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      icon: /*#__PURE__*/_jsxDEV(EventIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this),\n      action: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          size: \"small\",\n          component: RouterLink,\n          to: linkPath,\n          children: linkText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: notificationTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), notificationContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(AppNotification, \"JfJv12Py/ebs6BBoQ8uKiXtDPQ4=\", false, function () {\n  return [useAuth];\n});\n_c = AppNotification;\nexport default AppNotification;\nvar _c;\n$RefreshReg$(_c, \"AppNotification\");","map":{"version":3,"names":["React","useState","useEffect","Link","RouterLink","useAuth","Alert","AlertTitle","Box","Button","IconButton","Snackbar","Typography","CloseIcon","EventIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","AppNotification","appointments","_s","_upcomingAppointment$","_upcomingAppointment$2","_upcomingAppointment$3","user","open","setOpen","upcomingAppointment","setUpcomingAppointment","Array","isArray","length","scheduledAppointments","filter","apt","status","sort","a","b","Date","date","now","upcoming","find","aptDate","hours","minutes","startTime","split","map","Number","setHours","handleClose","isBusinessUser","role","appointmentDate","timeDiff","hoursUntil","Math","floor","minutesUntil","timeUntilText","notificationTitle","service","name","notificationContent","business","linkPath","_id","linkText","anchorOrigin","vertical","horizontal","onClose","children","severity","icon","fileName","_jsxFileName","lineNumber","columnNumber","action","color","size","component","to","onClick","fontSize","sx","width","_c","$RefreshReg$"],"sources":["D:/Appointment Scheduler/client/src/components/layout/AppNotification.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Snackbar,\r\n  Typography\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EventIcon from '@mui/icons-material/Event';\r\n\r\nconst AppNotification = ({ appointments }) => {\r\n  const { user } = useAuth();\r\n  const [open, setOpen] = useState(false);\r\n  const [upcomingAppointment, setUpcomingAppointment] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!appointments || !Array.isArray(appointments) || appointments.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Filter scheduled appointments and sort by date/time\r\n    const scheduledAppointments = appointments\r\n      .filter(apt => apt.status === 'scheduled')\r\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n    if (scheduledAppointments.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the next appointment (closest to current time)\r\n    const now = new Date();\r\n    const upcoming = scheduledAppointments.find(apt => {\r\n      const aptDate = new Date(apt.date);\r\n      const [hours, minutes] = apt.startTime.split(':').map(Number);\r\n      aptDate.setHours(hours, minutes);\r\n      return aptDate > now;\r\n    });\r\n\r\n    if (upcoming) {\r\n      setUpcomingAppointment(upcoming);\r\n      setOpen(true);\r\n    }\r\n  }, [appointments]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  if (!upcomingAppointment) {\r\n    return null;\r\n  }\r\n\r\n  const isBusinessUser = user && (user.role === 'business' || user.role === 'admin');\r\n  const appointmentDate = new Date(upcomingAppointment.date);\r\n  const [hours, minutes] = upcomingAppointment.startTime.split(':').map(Number);\r\n  appointmentDate.setHours(hours, minutes);\r\n  \r\n  // Calculate how much time until the appointment\r\n  const now = new Date();\r\n  const timeDiff = appointmentDate - now;\r\n  const hoursUntil = Math.floor(timeDiff / (1000 * 60 * 60));\r\n  const minutesUntil = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n  \r\n  let timeUntilText = '';\r\n  if (hoursUntil > 0) {\r\n    timeUntilText = `${hoursUntil} hour${hoursUntil > 1 ? 's' : ''}`;\r\n    if (minutesUntil > 0) {\r\n      timeUntilText += ` and ${minutesUntil} minute${minutesUntil > 1 ? 's' : ''}`;\r\n    }\r\n  } else if (minutesUntil > 0) {\r\n    timeUntilText = `${minutesUntil} minute${minutesUntil > 1 ? 's' : ''}`;\r\n  } else {\r\n    timeUntilText = 'less than a minute';\r\n  }\r\n\r\n  // Different content based on user role\r\n  const notificationTitle = isBusinessUser \r\n    ? \"Upcoming Appointment with Client\" \r\n    : `Upcoming Appointment: ${upcomingAppointment.service?.name}`;\r\n    \r\n  const notificationContent = isBusinessUser\r\n    ? `You have an appointment with ${upcomingAppointment.user?.name} in ${timeUntilText} at ${upcomingAppointment.startTime}.`\r\n    : `Your appointment with ${upcomingAppointment.business?.name} is in ${timeUntilText} at ${upcomingAppointment.startTime}.`;\r\n\r\n  const linkPath = isBusinessUser ? \"/business/dashboard\" : `/appointments/${upcomingAppointment._id}`;\r\n  const linkText = isBusinessUser ? \"View Business Dashboard\" : \"View Appointment Details\";\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert\r\n        severity=\"info\"\r\n        icon={<EventIcon />}\r\n        action={\r\n          <>\r\n            <Button \r\n              color=\"inherit\" \r\n              size=\"small\" \r\n              component={RouterLink}\r\n              to={linkPath}\r\n            >\r\n              {linkText}\r\n            </Button>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </>\r\n        }\r\n        sx={{ width: '100%' }}\r\n      >\r\n        <AlertTitle>{notificationTitle}</AlertTitle>\r\n        {notificationContent}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default AppNotification; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AACrD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SACEC,KAAK,EACLC,UAAU,EACVC,GAAG,EACHC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,UAAU,QACL,eAAe;AACtB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC5C,MAAM;IAAEC;EAAK,CAAC,GAAGpB,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAAC2B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAEpEC,SAAS,CAAC,MAAM;IACd,IAAI,CAACkB,YAAY,IAAI,CAACU,KAAK,CAACC,OAAO,CAACX,YAAY,CAAC,IAAIA,YAAY,CAACY,MAAM,KAAK,CAAC,EAAE;MAC9E;IACF;;IAEA;IACA,MAAMC,qBAAqB,GAAGb,YAAY,CACvCc,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,WAAW,CAAC,CACzCC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC;IAEtD,IAAIR,qBAAqB,CAACD,MAAM,KAAK,CAAC,EAAE;MACtC;IACF;;IAEA;IACA,MAAMU,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;IACtB,MAAMG,QAAQ,GAAGV,qBAAqB,CAACW,IAAI,CAACT,GAAG,IAAI;MACjD,MAAMU,OAAO,GAAG,IAAIL,IAAI,CAACL,GAAG,CAACM,IAAI,CAAC;MAClC,MAAM,CAACK,KAAK,EAAEC,OAAO,CAAC,GAAGZ,GAAG,CAACa,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;MAC7DN,OAAO,CAACO,QAAQ,CAACN,KAAK,EAAEC,OAAO,CAAC;MAChC,OAAOF,OAAO,GAAGH,GAAG;IACtB,CAAC,CAAC;IAEF,IAAIC,QAAQ,EAAE;MACZd,sBAAsB,CAACc,QAAQ,CAAC;MAChChB,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,MAAMiC,WAAW,GAAGA,CAAA,KAAM;IACxB1B,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,IAAI,CAACC,mBAAmB,EAAE;IACxB,OAAO,IAAI;EACb;EAEA,MAAM0B,cAAc,GAAG7B,IAAI,KAAKA,IAAI,CAAC8B,IAAI,KAAK,UAAU,IAAI9B,IAAI,CAAC8B,IAAI,KAAK,OAAO,CAAC;EAClF,MAAMC,eAAe,GAAG,IAAIhB,IAAI,CAACZ,mBAAmB,CAACa,IAAI,CAAC;EAC1D,MAAM,CAACK,KAAK,EAAEC,OAAO,CAAC,GAAGnB,mBAAmB,CAACoB,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EAC7EK,eAAe,CAACJ,QAAQ,CAACN,KAAK,EAAEC,OAAO,CAAC;;EAExC;EACA,MAAML,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;EACtB,MAAMiB,QAAQ,GAAGD,eAAe,GAAGd,GAAG;EACtC,MAAMgB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC1D,MAAMI,YAAY,GAAGF,IAAI,CAACC,KAAK,CAAEH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;EAE5E,IAAIK,aAAa,GAAG,EAAE;EACtB,IAAIJ,UAAU,GAAG,CAAC,EAAE;IAClBI,aAAa,GAAG,GAAGJ,UAAU,QAAQA,UAAU,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE;IAChE,IAAIG,YAAY,GAAG,CAAC,EAAE;MACpBC,aAAa,IAAI,QAAQD,YAAY,UAAUA,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE;IAC9E;EACF,CAAC,MAAM,IAAIA,YAAY,GAAG,CAAC,EAAE;IAC3BC,aAAa,GAAG,GAAGD,YAAY,UAAUA,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE;EACxE,CAAC,MAAM;IACLC,aAAa,GAAG,oBAAoB;EACtC;;EAEA;EACA,MAAMC,iBAAiB,GAAGT,cAAc,GACpC,kCAAkC,GAClC,0BAAAhC,qBAAA,GAAyBM,mBAAmB,CAACoC,OAAO,cAAA1C,qBAAA,uBAA3BA,qBAAA,CAA6B2C,IAAI,EAAE;EAEhE,MAAMC,mBAAmB,GAAGZ,cAAc,GACtC,iCAAA/B,sBAAA,GAAgCK,mBAAmB,CAACH,IAAI,cAAAF,sBAAA,uBAAxBA,sBAAA,CAA0B0C,IAAI,OAAOH,aAAa,OAAOlC,mBAAmB,CAACoB,SAAS,GAAG,GACzH,0BAAAxB,sBAAA,GAAyBI,mBAAmB,CAACuC,QAAQ,cAAA3C,sBAAA,uBAA5BA,sBAAA,CAA8ByC,IAAI,UAAUH,aAAa,OAAOlC,mBAAmB,CAACoB,SAAS,GAAG;EAE7H,MAAMoB,QAAQ,GAAGd,cAAc,GAAG,qBAAqB,GAAG,iBAAiB1B,mBAAmB,CAACyC,GAAG,EAAE;EACpG,MAAMC,QAAQ,GAAGhB,cAAc,GAAG,yBAAyB,GAAG,0BAA0B;EAExF,oBACEtC,OAAA,CAACL,QAAQ;IACPe,IAAI,EAAEA,IAAK;IACX6C,YAAY,EAAE;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAS,CAAE;IACxDC,OAAO,EAAErB,WAAY;IAAAsB,QAAA,eAErB3D,OAAA,CAACV,KAAK;MACJsE,QAAQ,EAAC,MAAM;MACfC,IAAI,eAAE7D,OAAA,CAACF,SAAS;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACpBC,MAAM,eACJlE,OAAA,CAAAE,SAAA;QAAAyD,QAAA,gBACE3D,OAAA,CAACP,MAAM;UACL0E,KAAK,EAAC,SAAS;UACfC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAEjF,UAAW;UACtBkF,EAAE,EAAElB,QAAS;UAAAO,QAAA,EAEZL;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACTjE,OAAA,CAACN,UAAU;UACT0E,IAAI,EAAC,OAAO;UACZ,cAAW,OAAO;UAClBD,KAAK,EAAC,SAAS;UACfI,OAAO,EAAElC,WAAY;UAAAsB,QAAA,eAErB3D,OAAA,CAACH,SAAS;YAAC2E,QAAQ,EAAC;UAAO;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA,eACb,CACH;MACDQ,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAf,QAAA,gBAEtB3D,OAAA,CAACT,UAAU;QAAAoE,QAAA,EAAEZ;MAAiB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,EAC3Cf,mBAAmB;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAC5D,EAAA,CAjHIF,eAAe;EAAA,QACFd,OAAO;AAAA;AAAAsF,EAAA,GADpBxE,eAAe;AAmHrB,eAAeA,eAAe;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}