{"ast":null,"code":"var _jsxFileName = \"D:\\\\Appointment Scheduler\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Set token in axios headers\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Load user data if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const res = await api.get('/api/auth/profile');\n        setUser(res.data);\n      } catch (error) {\n        console.error('Error loading user:', error);\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      const res = await api.post('/api/auth/register', userData);\n      setToken(res.data.token);\n      setUser(res.data);\n      localStorage.setItem('token', res.data.token);\n      toast.success('Registration successful!');\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      toast.error(message);\n      return false;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const res = await api.post('/api/auth/login', {\n        email,\n        password\n      });\n      setToken(res.data.token);\n      setUser(res.data);\n      localStorage.setItem('token', res.data.token);\n      toast.success('Login successful!');\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return false;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    toast.info('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const res = await api.put('/api/auth/profile', userData);\n      setUser(res.data);\n      localStorage.setItem('token', res.data.token);\n      toast.success('Profile updated successfully!');\n      return true;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return false;\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"FXi2zprQ4FdDQp5Badf2jWUNTs8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","loadUser","res","get","data","error","console","logout","register","userData","post","setItem","success","_error$response","_error$response$data","message","response","login","email","password","_error$response2","_error$response2$data","removeItem","info","updateProfile","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Appointment Scheduler/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../api/axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Set token in axios headers\r\n  useEffect(() => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Load user data if token exists\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await api.get('/api/auth/profile');\r\n        setUser(res.data);\r\n      } catch (error) {\r\n        console.error('Error loading user:', error);\r\n        logout();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, [token]);\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await api.post('/api/auth/register', userData);\r\n      \r\n      setToken(res.data.token);\r\n      setUser(res.data);\r\n      localStorage.setItem('token', res.data.token);\r\n      \r\n      toast.success('Registration successful!');\r\n      return true;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await api.post('/api/auth/login', { email, password });\r\n      \r\n      setToken(res.data.token);\r\n      setUser(res.data);\r\n      localStorage.setItem('token', res.data.token);\r\n      \r\n      toast.success('Login successful!');\r\n      return true;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    toast.info('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const res = await api.put('/api/auth/profile', userData);\r\n      \r\n      setUser(res.data);\r\n      localStorage.setItem('token', res.data.token);\r\n      \r\n      toast.success('Profile updated successfully!');\r\n      return true;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}